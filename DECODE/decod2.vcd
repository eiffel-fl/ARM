$date
  Fri Jan  8 17:15:27 2016
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! dec_op1[31:0] $end
$var reg 32 " dec_op2[31:0] $end
$var reg 32 # dec_mem_data[31:0] $end
$var reg 4 $ dec_mem_dest[3:0] $end
$var reg 1 % dec_mem_lw $end
$var reg 1 & dec_mem_lb $end
$var reg 1 ' dec_mem_sw $end
$var reg 1 ( dec_mem_sb $end
$var reg 1 ) dec_shift_lsl $end
$var reg 1 * dec_shift_lsr $end
$var reg 1 + dec_shift_asr $end
$var reg 1 , dec_shift_ror $end
$var reg 1 - dec_shift_rrx $end
$var reg 5 . dec_shift_val[4:0] $end
$var reg 1 / dec_cy $end
$var reg 1 0 dec_comp_op1 $end
$var reg 1 1 dec_comp_op2 $end
$var reg 1 2 dec_alu_cy $end
$var reg 1 3 dec_zero_op1 $end
$var reg 1 4 dec_alu_add $end
$var reg 1 5 dec_alu_and $end
$var reg 1 6 dec_alu_or $end
$var reg 1 7 dec_alu_xor $end
$var reg 32 8 exe_alu_res[31:0] $end
$var reg 1 9 exe_c $end
$var reg 1 : exe_v $end
$var reg 1 ; exe_n $end
$var reg 1 < exe_z $end
$var reg 32 = if_pc[31:0] $end
$var reg 32 > if_next_pc[31:0] $end
$var reg 32 ? if_ir[31:0] $end
$var reg 1 @ dec_fetch_inst $end
$var reg 32 A dec_bpc[31:0] $end
$var reg 1 B dec_bpc_valid $end
$var reg 32 C mem_commit_val[31:0] $end
$var reg 4 D mem_commit_reg[3:0] $end
$var reg 1 E mem_commit $end
$var reg 1 F ck $end
$var reg 1 G reset_n $end
$var reg 1 H vdd $end
$var reg 1 I vss $end
$scope module testb $end
$var reg 32 J dec_op1[31:0] $end
$var reg 32 K dec_op2[31:0] $end
$var reg 32 L dec_mem_data[31:0] $end
$var reg 4 M dec_mem_dest[3:0] $end
$var reg 1 N dec_mem_lw $end
$var reg 1 O dec_mem_lb $end
$var reg 1 P dec_mem_sw $end
$var reg 1 Q dec_mem_sb $end
$var reg 1 R dec_shift_lsl $end
$var reg 1 S dec_shift_lsr $end
$var reg 1 T dec_shift_asr $end
$var reg 1 U dec_shift_ror $end
$var reg 1 V dec_shift_rrx $end
$var reg 5 W dec_shift_val[4:0] $end
$var reg 1 X dec_cy $end
$var reg 1 Y dec_comp_op1 $end
$var reg 1 Z dec_comp_op2 $end
$var reg 1 [ dec_alu_cy $end
$var reg 1 \ dec_zero_op1 $end
$var reg 1 ] dec_alu_add $end
$var reg 1 ^ dec_alu_and $end
$var reg 1 _ dec_alu_or $end
$var reg 1 ` dec_alu_xor $end
$var reg 32 a exe_alu_res[31:0] $end
$var reg 1 b exe_c $end
$var reg 1 c exe_v $end
$var reg 1 d exe_n $end
$var reg 1 e exe_z $end
$var reg 32 f if_pc[31:0] $end
$var reg 32 g if_next_pc[31:0] $end
$var reg 32 h if_ir[31:0] $end
$var reg 1 i dec_fetch_inst $end
$var reg 32 j dec_bpc[31:0] $end
$var reg 1 k dec_bpc_valid $end
$var reg 32 l mem_commit_val[31:0] $end
$var reg 4 m mem_commit_reg[3:0] $end
$var reg 1 n mem_commit $end
$var reg 1 o ck $end
$var reg 1 p reset_n $end
$var reg 1 q vdd $end
$var reg 1 r vss $end
$var reg 1 s cond $end
$var reg 1 t cond_en $end
$var reg 1 u regop_t $end
$var reg 1 v mult_t $end
$var reg 1 w swap_t $end
$var reg 1 x trans_t $end
$var reg 1 y mtrans_t $end
$var reg 1 z branch_t $end
$var reg 1 { and_i $end
$var reg 1 | eor_i $end
$var reg 1 } sub_i $end
$var reg 1 !" rsb_i $end
$var reg 1 "" add_i $end
$var reg 1 #" adc_i $end
$var reg 1 $" sbc_i $end
$var reg 1 %" rsc_i $end
$var reg 1 &" tst_i $end
$var reg 1 '" teq_i $end
$var reg 1 (" cmp_i $end
$var reg 1 )" cmn_i $end
$var reg 1 *" orr_i $end
$var reg 1 +" mov_i $end
$var reg 1 ," bic_i $end
$var reg 1 -" mvn_i $end
$var reg 1 ." mul_i $end
$var reg 1 /" mla_i $end
$var reg 1 0" ldr_i $end
$var reg 1 1" str_i $end
$var reg 1 2" ldrb_i $end
$var reg 1 3" strb_i $end
$var reg 1 4" ldm_i $end
$var reg 1 5" stm_i $end
$comment r_reg is not handled $end
$comment r is not handled $end
$var reg 1 6" b_i $end
$var reg 1 7" bl_i $end
$var reg 15 8" r_valid[14:0] $end
$var reg 4 9" r_dest_reg[3:0] $end
$var reg 1 :" r_dest_we_reg $end
$var reg 1 ;" s_set_reg $end
$var reg 1 <" load_r $end
$var reg 16 =" mtrans_list[15:0] $end
$var reg 16 >" mtrans_list_reg[15:0] $end
$var reg 4 ?" mtrans_next_reg[3:0] $end
$var reg 15 @" list_cy[14:0] $end
$var reg 32 A" rf_op1[31:0] $end
$var reg 32 B" rf_op2[31:0] $end
$var reg 32 C" rf_op3[31:0] $end
$var reg 4 D" rf_radr1[3:0] $end
$var reg 4 E" rf_radr2[3:0] $end
$var reg 4 F" rf_radr3[3:0] $end
$var reg 1 G" n_reg $end
$var reg 1 H" z_reg $end
$var reg 1 I" c_reg $end
$var reg 1 J" v_reg $end
$var reg 1 K" n $end
$var reg 1 L" z $end
$var reg 1 M" c $end
$var reg 1 N" v $end
$var reg 32 O" op1_reg[31:0] $end
$var reg 32 P" op2_reg[31:0] $end
$var reg 32 Q" op3_reg[31:0] $end
$var reg 4 R" dest_reg[3:0] $end
$var reg 1 S" fset $end
$comment cur_state is not handled $end
$comment next_state is not handled $end
$var reg 1 T" opok $end
$var reg 1 U" mulok $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU !
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU "
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #
bUUUU $
U%
U&
U'
U(
U)
U*
U+
U,
U-
b00000 .
U/
U0
U1
U2
U3
U4
U5
U6
U7
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 8
U9
U:
U;
U<
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU =
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU >
b11100000000000010010000001100011 ?
1@
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU A
UB
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C
bUUUU D
UE
0F
UG
UH
UI
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU J
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU K
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU L
bUUUU M
UN
UO
UP
UQ
UR
US
UT
UU
UV
b00000 W
UX
UY
UZ
U[
U\
U]
U^
U_
U`
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU a
Ub
Uc
Ud
Ue
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU f
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU g
b11100000000000010010000001100011 h
1i
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU j
Uk
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU l
bUUUU m
Un
0o
Up
Uq
Ur
1s
Ut
1u
0v
0w
0x
0y
0z
1{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
bUUUUUUUUUUUUUUU 8"
bUUUU 9"
U:"
U;"
0<"
b0000000000000000 ="
bUUUUUUUUUUUUUUUU >"
bUUUU ?"
bUUUUUUUUUUUUUUU @"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU A"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU B"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C"
b0001 D"
b0010 E"
b0011 F"
UG"
UH"
UI"
UJ"
UK"
UL"
UM"
UN"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU O"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU P"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Q"
bUUUU R"
US"
1T"
UU"
#2000000
0%
0)
0*
0+
0,
1-
00
01
02
03
04
15
06
07
1F
0G
0N
0R
0S
0T
0U
1V
0Y
0Z
0[
0\
0]
1^
0_
0`
1o
0p
b111111111111111 8"
#4000000
0F
0o
#6000000
1F
1V
0]
1^
1o
#8000000
0F
0o
#10000000
1F
1V
0]
1^
1o
#12000000
0F
0o
#14000000
1F
1V
0]
1^
1o
